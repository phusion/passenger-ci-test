name: Passenger Debian packaging tests

env:
  FORCE_COLOR: 1
  RUST_LOG_STYLE: always

on:
  push: {}

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      distros: ${{ steps.distros.outputs.distros }}
    steps:
      - uses: actions/checkout@v4
        timeout-minutes: 1
        with:
          submodules: true
      - name: Define Distros
        id: distros
        run: echo "distros=[$(awk -F= '/DEFAULT_DISTROS/{print $2}' packaging/debian/internal/lib/distro_info.sh | sed -e 's/ /", "/g')]" >> "$GITHUB_OUTPUT"

  test:
    name: ${{ matrix.distro }} ${{ matrix.arch.name }}
    needs: define-matrix
    strategy:
      fail-fast: false
      matrix:
        distro: ${{ fromJSON(needs.define-matrix.outputs.distros) }}
        arch:
          - name: amd64
            runner: ubuntu-24.04
          - name: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.arch.runner }}
    timeout-minutes: 20
    env:
      WORKSPACE: ${{ github.workspace }}
      ARCHITECTURE: ${{ matrix.arch.name }}
      CACHE_DIR: ${{ github.workspace }}/cache/debian-test/${{ matrix.distro }}-${{ matrix.arch.name }}
      DISTRIBUTION: ${{ matrix.distro }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - run: mkdir work cache output

      - name: Fetch cache
        run: ./dev/ci/fetch-cache-az-blob-storage
        timeout-minutes: 5
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_CI_STORAGE_CONNECTION_STRING }}
          CONTAINER_NAME: ${{ vars.SCCACHE_AZURE_BLOB_CONTAINER }}
          BLOB_NAME: "binaries/debian-cache-${{ matrix.distro }}-${{ matrix.arch.name }}.tar.zstd"
          CACHE_PATH: packaging/debian/cache
          SUDO: true

      - name: Build
        run: ./build -w work -c cache -o output -p "$WORKSPACE" -d "$DISTRIBUTION" -a "$ARCHITECTURE" -R pkg:all
        timeout-minutes: 15
        env:
          WORKSPACE: ${{ github.workspace }}
          DISTRIBUTION: ${{ matrix.distro }}
          ARCHITECTURE: ${{ matrix.arch.name }}
        working-directory: packaging/debian

      - name: Test
        run: >
          ./test
          -p "$WORKSPACE"
          -d "output/$DISTRIBUTION"
          -c cache
          -x "$DISTRIBUTION"
          -a "$ARCHITECTURE"
          -j
        timeout-minutes: 5
        env:
          WORKSPACE: ${{ github.workspace }}
          DISTRIBUTION: ${{ matrix.distro }}
          ARCHITECTURE: ${{ matrix.arch.name }}
        working-directory: packaging/debian

      - name: Update cache
        run: ./dev/ci/update-cache-az-blob-storage
        timeout-minutes: 3
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_CI_STORAGE_CONNECTION_STRING }}
          CONTAINER_NAME: ${{ vars.SCCACHE_AZURE_BLOB_CONTAINER }}
          BLOB_NAME: "binaries/debian-cache-${{ matrix.distro }}-${{ matrix.arch.name }}.tar.zstd"
          CACHE_PATH: packaging/debian/cache
          SUDO: true

      - uses: actions/upload-artifact@v4
        timeout-minutes: 1
        with:
          name: debian-${{ matrix.distro }}-${{ matrix.arch.name }}
          path: packaging/debian/output/${{ matrix.distro }}/*
